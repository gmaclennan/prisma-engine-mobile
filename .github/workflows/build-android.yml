on:
  push:
  workflow_dispatch:
jobs:
  build:
    name: "Android build"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - { abi: armeabi-v7a, triple: armv7a-linux-androideabi }
          - { abi: arm64-v8a, triple: aarch64-linux-android}
          - { abi: x86, triple: i686-linux-android }
          - { abi: x86-64, triple: x86_64-linux-android }
    steps:
      - uses: actions/checkout@v2
        with:
          repository: prisma/prisma-engines
          ref: '2.25.0'
      - name: Use specific Java version for sdkmanager to work
        uses: joschi/setup-jdk@v2
        with:
          java-version: "openjdk8"
          architecture: "x64"
      - name: Set toolchain bin path
        run: echo "::set-output name=NDK_TOOLCHAINS::${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin"
        id: android
      - name: Symlinks for triple names for armv7a
        working-directory: ${{ steps.android.outputs.NDK_TOOLCHAINS}}
        run: |
          for source in arm-linux-androideabi-*
          do
              dest=${source/arm/armv7a}
              ln -sf $source $dest
          done
      - name: Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
      - run: |
          ls -al ~/
          ls -al ~/.cargo
          echo '[target.${{ matrix.target.triple }}]' > ~/.cargo/config.toml
          echo 'ar = "${{ steps.android.outputs.NDK_TOOLCHAINS }}/${{ matrix.target.triple }}-ar"' >> ~/.cargo/config.toml
          echo 'linker = "${{ steps.android.outputs.NDK_TOOLCHAINS }}/${{ matrix.target.triple }}21-clang"' >> ~/.cargo/config.toml
          cat ~/.cargo/config.toml
      - run: rustup target add ${{ matrix.target.triple }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ matrix.target.abi }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target ${{ matrix.target.triple }} --release -p query-engine-napi
        env:
          CC: ${{ steps.android.outputs.NDK_TOOLCHAINS }}/${{ matrix.target.triple }}21-clang
          CXX: ${{ steps.android.outputs.NDK_TOOLCHAINS }}/${{ matrix.target.triple }}21-clang++
          AR: ${{ steps.android.outputs.NDK_TOOLCHAINS }}/${{ matrix.target.triple }}-ar
          LD: ${{ steps.android.outputs.NDK_TOOLCHAINS }}/${{ matrix.target.triple }}-ld
          RANLIB: ${{ steps.android.outputs.NDK_TOOLCHAINS }}/${{ matrix.target.triple }}-ranlib
          CARGO_PROFILE_RELEASE_LTO: true
          CARGO_PROFILE_RELEASE_OPT_LEVEL: z
          CARGO_PROFILE_RELEASE_CODEGEN_UNITS: 1
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target.abi }}
          path: target/${{ matrix.target.triple }}/release/libquery_engine_napi.so
